apiVersion: v1
kind: Pod
metadata:
  name: cm-demo
  namespace: kube-learnings
  # labels on pod
  labels:
    name: cm-demo
spec:
  containers:
  - name: cm-demo
    image: cbagade/cm-demo:v1
    imagePullPolicy: Always
    envFrom:
    - configMapRef:
        name: session-data
    


# docker build -t cbagade/cm-demo:v1 .
# docker push cbagade/cm-demo:v1

# create config map in imperative way
# kubectl create configmap session-data --from-literal=who_to_greet_ev=DevOps --from-literal=session_ev=DevOps --from-literal=duration_ev=4 --from-literal=topics_ev="Python, Docker, K8, Jenkins"
# verify config map
# kubectl get cm
# kubectl describe cm session-data
# kubectl apply -f pod.yaml
# kubectl get pods -w
# kubectl expose --type=NodePort  pod  cm-demo --port 5000 --name cm-demo-svc
# curl localhost:<node port>/session
# kubectl delete configmap session-data

# kubectl delete -f pod.yaml
# create config map in declarative way
# kubectl apply -f cm.yaml
# kubectl apply -f pod.yaml
# kubectl get pods -w
# no need to define service again
# curl localhost:<node port>/session
