# what service should have - the deployment which it want to expose, the port of pod and  port at which
# application is running
# pl refer https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/

apiVersion: v1
# k8 artifacts
kind: Service
# its own name
metadata:
  name: np-service
# deployment specs
spec:
  # select pods with lable app: second-app (pods may have multiple labels)
  # the pods in our case is having second label tier: backend
  # the pods can also be placed say with label tier: another-backend
  # so selecting just app: second-app is targetting all the tiers in which this app can be placed
  selector:
    app: second-app
  # ports specs
  ports:
    # IP protocol
    - protocol: "TCP"
      # port that will be exposed by this service
      port: 80
      # port number to access on the pods targeted by the service (mapped to application)
      # optional field, if not provided, it is assumed to be same as port
      targetPort: 5000
      # to allow traffic inside  cluster
      # optional, a free port between valid range is allocated
      nodePort: 30008
  # type of service
  type: NodePort

  # kubectl apply  -f pod_ip.yaml
  # try to access curl http://localhost:30008/greetings -> Not accessible
  # kubectl apply -f service.yaml
  # kubectl get services
  # curl http://localhost:30008/greetings
  # can also be accessed by node ip
  # kubectl get nodes -o wide --> this will give IP of node
  # kubectl get pods -o wide --> this will give which node pod is running on
  # curl http://<worker_node_ip>:30010
  # kubectl delete -f pod_ip.yaml
  # kubectl apply -f pod_ip.yaml
  # kubectl get pods --> pod might get differnt IP
  # curl http://<worker_node_ip>:30010  --> Still same works
  # There might be multiple instances of pods running across different nodes, which suggest pods should be accessible by 
  # IP of any node (no matter which nod its running)
  # Try with IP address of all nodes and it will work
  # kubectl delete -f pod_ip.yaml
  

  # repeat same steps but instead pod
  # kubectl apply -f deployment.yaml

  # Finally cleanup
  # kubectl delete -f service.yaml
  # kubectl apply -f deployment.yaml